CREATE	FUNCTION [Access.WebDev].[ufn_UnquotedConcentrationMonthEndByFund] ()
RETURNS	@OUTPUT TABLE
        (  
        FUND_SHORT_NAME varchar(20) NULL,  
		FUNDING_EXP decimal (20,2) NULL,  
		REVALUATION_EXP decimal (20,2) NULL,  
        QUOTED_AUM_EXP decimal (20,2) NULL,  
        UNQUOTED_AUM_EXP decimal (20,2) NULL,  
		UNQUOTED_CONCENTRATION_EXP decimal (20,10) NULL,  
        HEADROOM_EXP decimal (20,2) NULL,
		MONTH_END_POSITION_DATE date
        )

AS
-------------------------------------------------------------------------------------- 
-- Name: [Access.WebDev].[ufn_UnquotedConcentrationMonthEndByFund]
-- 
-- Params:	
-------------------------------------------------------------------------------------- 
-- History:
-- R. Dixon: 03/01/2018 DAP-1640 WIMEIF Flows assumption changed to -£7.5m 
-- R. Dixon: 17/01/2018 DAP-1682 WIMEIF Flows assumption changed to 10 day average as per swing pricing
-------------------------------------------------------------------------------------- 

BEGIN

DECLARE @FUNDDATA TABLE
        (  
        POSITION_DATE datetime NULL,  
        FUND_SHORT_NAME varchar(20) NULL,  
        AUM decimal (20,2) NULL,  
        TOTAL_UNQUOTED decimal (20,2) NULL,  
        FLOW decimal (20,2) NULL,  
        FUNDING decimal (20,2) NULL,  
        REVALUATION decimal (20,2) NULL,  
        AUM_EOD decimal (20,2) NULL,  
        UNQUOTED_EOD decimal (20,2) NULL,  
        CONCENTRATION_EOD decimal (20,10) NULL,  
        HEADROOM decimal (20,2) NULL  
        )


-- WIMEIF
INSERT INTO @FUNDDATA(POSITION_DATE, FUND_SHORT_NAME, AUM, TOTAL_UNQUOTED, FLOW, FUNDING, REVALUATION, AUM_EOD, UNQUOTED_EOD, CONCENTRATION_EOD)  
SELECT POSITION_DATE, FUND_SHORT_NAME, AUM, TOTAL_UNQUOTED, FLOW, FUNDING, REVALUATION, AUM_EOD, UNQUOTED_EOD, CONCENTRATION_EOD
FROM [DBO].[UFN_UNQUOTED_PROJECTION_WIMEIF] (0, 32, 32, (SELECT [10DAYAVERATENETFLOW] FROM [ACCESS.WEBDEV].UFN_GETSWINGPRICING('WIMEIF', null)), 0, GETDATE(), 0, GETDATE(),0) WHERE DATEPART(MM,POSITION_DATE) = DATEPART(MM,GETDATE())

-- WIMPCT
INSERT INTO @FUNDDATA(POSITION_DATE, FUND_SHORT_NAME, AUM, TOTAL_UNQUOTED, FLOW, FUNDING, REVALUATION, AUM_EOD, UNQUOTED_EOD, CONCENTRATION_EOD, HEADROOM)  
SELECT POSITION_DATE, FUND_SHORT_NAME, NAV, TOTAL_UNQUOTED, FLOW, FUNDING, REVALUATION, GROSS_ASSET_VALUE, UNQUOTED_EOD, UQ_VS_GAV, GAV_HEADROOM
FROM [DBO].[UFN_UNQUOTED_PROJECTION_WIMPCT] (0, 32, 32, 0, 0, GETDATE(), 0, GETDATE(),0,-150000000) WHERE DATEPART(MM,POSITION_DATE) = DATEPART(MM,GETDATE())

-- OMNIS1
INSERT INTO @FUNDDATA(POSITION_DATE, FUND_SHORT_NAME, AUM, TOTAL_UNQUOTED, FLOW, FUNDING, REVALUATION, AUM_EOD, UNQUOTED_EOD, CONCENTRATION_EOD)  
SELECT POSITION_DATE, FUND_SHORT_NAME, AUM, TOTAL_UNQUOTED, FLOW, FUNDING, REVALUATION, AUM_EOD, UNQUOTED_EOD, CONCENTRATION_EOD
FROM [DBO].[UFN_UNQUOTED_PROJECTION_OMNIS] (0, 32, 32, 0, 0, GETDATE(), 0, GETDATE(),0) WHERE DATEPART(MM,POSITION_DATE) = DATEPART(MM,GETDATE())

INSERT INTO @OUTPUT(FUND_SHORT_NAME, FUNDING_EXP, REVALUATION_EXP, QUOTED_AUM_EXP, UNQUOTED_AUM_EXP, UNQUOTED_CONCENTRATION_EXP, HEADROOM_EXP, MONTH_END_POSITION_DATE)
-- WIMEIF
SELECT	m.FUND_SHORT_NAME, m.FUNDING, m.REVALUATION, (t.AUM_EOD - t.UNQUOTED_EOD) AS QUOTED_AUM_EXP, t.UNQUOTED_EOD AS UNQUOTED_AUM_EXP, 100 * (t.UNQUOTED_EOD/t.AUM_EOD) AS UNQUOTED_CONCENTRATION_PCT, ((t.AUM_EOD * 0.1) - t.UNQUOTED_EOD) AS HEADROOM_EXP, t

.POSITION_DATE
FROM   (
        SELECT	SUM(FUNDING) AS FUNDING, SUM(REVALUATION) AS REVALUATION, FUND_SHORT_NAME
        FROM	@FundData
        WHERE	FUND_SHORT_NAME = 'WIMEIF'
		AND		POSITION_DATE >= CAST(GETDATE() AS date)
        GROUP	BY FUND_SHORT_NAME
        ) m
INNER	JOIN 
		(
		SELECT TOP 1 FUND_SHORT_NAME, AUM_EOD, UNQUOTED_EOD, POSITION_DATE
		FROM   @FundData
		WHERE  FUND_SHORT_NAME = 'WIMEIF'
		ORDER  BY POSITION_DATE DESC
		) t
ON		t.FUND_SHORT_NAME = m.FUND_SHORT_NAME
UNION

-- WIMPCTso
SELECT	m.FUND_SHORT_NAME, m.FUNDING, m.REVALUATION, (t.AUM_EOD - t.UNQUOTED_EOD) AS QUOTED_AUM_EXP, t.UNQUOTED_EOD AS UNQUOTED_AUM_EXP, t.CONCENTRATION_EOD AS UNQUOTED_CONCENTRATION_PCT, 
-- ((t.AUM_EOD * 0.8) - t.UNQUOTED_EOD) AS HEADROOM_EXP, 
t.HEADROOM AS HEADROOM_EXP, 
t.POSITION_DATE
FROM   (
        SELECT	SUM(FUNDING) AS FUNDING, SUM(REVALUATION) AS REVALUATION, FUND_SHORT_NAME
        FROM	@FundData
        WHERE	FUND_SHORT_NAME = 'WIMPCT'
		AND		POSITION_DATE >= CAST(GETDATE() AS date)
        GROUP	BY FUND_SHORT_NAME
        ) m
INNER	JOIN 
		(
		SELECT TOP 1 FUND_SHORT_NAME, AUM_EOD, UNQUOTED_EOD, POSITION_DATE, HEADROOM, CONCENTRATION_EOD
		FROM   @FundData
		WHERE  FUND_SHORT_NAME = 'WIMPCT'
		ORDER  BY POSITION_DATE DESC
		) t
ON		t.FUND_SHORT_NAME = m.FUND_SHORT_NAME
UNION

-- OMNIS1
SELECT	m.FUND_SHORT_NAME, m.FUNDING, m.REVALUATION, (t.AUM_EOD - t.UNQUOTED_EOD) AS QUOTED_AUM_EXP, t.UNQUOTED_EOD AS UNQUOTED_AUM_EXP, 100 * (t.UNQUOTED_EOD/t.AUM_EOD) AS UNQUOTED_CONCENTRATION_EXP, ((t.AUM_EOD * 0.1) - t.UNQUOTED_EOD) AS HEADROOM_EXP, t

.POSITION_DATE
FROM   (
		SELECT	SUM(FUNDING) AS FUNDING, SUM(REVALUATION) AS REVALUATION, FUND_SHORT_NAME
        FROM	@FundData
        WHERE	FUND_SHORT_NAME = 'OMNIS1'
		AND		POSITION_DATE >= CAST(GETDATE() AS date)
        GROUP	BY FUND_SHORT_NAME
		) m
INNER	JOIN 
        (
        SELECT TOP 1 FUND_SHORT_NAME, AUM_EOD, UNQUOTED_EOD, POSITION_DATE
        FROM   @FundData
        WHERE  FUND_SHORT_NAME = 'OMNIS1'
        ORDER  BY POSITION_DATE DESC
        ) t
ON		t.FUND_SHORT_NAME = m.FUND_SHORT_NAME

RETURN 

END
