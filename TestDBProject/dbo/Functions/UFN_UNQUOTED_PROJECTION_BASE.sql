

CREATE FUNCTION  [dbo].[UFN_UNQUOTED_PROJECTION_BASE] 
(
@FUND	varchar(20),
@DAYSBCK int,
@FLOWLAG int
)

RETURNS @OUTPUT TABLE(
	POSITION_DATE datetime NULL,
	FUND_SHORT_NAME varchar(20) NULL,
	NAV decimal (20,2) NULL,
	AUM decimal (20,2) NULL,
	TOTAL_UNQUOTED decimal (20,2) NULL,
	FLOW decimal (20,2) NULL,
	FUNDING decimal (20,2) NULL,
	REVALUATION decimal (20,2) NULL,
	EOD decimal (20,2) NULL,
	NT_BORROWING_BASE_UEOD decimal (20,2) NULL,
	UNQUOTED_EOD decimal (20,2) NULL,
	CASH decimal (20,2) NULL
	)

AS
-------------------------------------------------------------------------------------- 
-- Name: [dbo].[UFN_UNQUOTED_PROJECTION_BASE] 
-- 
-- Params:	@FUND fund short name
--			@DAYSBCK number of business days back in time to retrieve data for
--			@FLOWLAG number of days to delay fund flow values being applied (i.e. avg difference between transaction and settlement dates)
-------------------------------------------------------------------------------------- 
-- History:
-- R. Dixon: 22/01/2018 DAP-1693 Remove the exclusion fopr OMNIS for EDM_SEC_ID = 700000372
-- R. Dixon: 02/02/2018 DAP-1761 Remove exclusion for EDM_SEC_ID = 700000381 from WIMEIF unquoted securities.
-- R. Dixon: 02/02/2018 JIRA: DAP-1831 Added exclusion for EDM_SEC_ID = 700000440,700000439,700000438,700000437,700000436,700000435,700000434 from WIMEIF unquoted securities.
-- R. Dixon: 26/03/2018 JIRA: DAP-1888 Added exclusion for EDM_SEC_ID = 700000450 from WIMEIF unquoted securities.
-- R. Dixon: 30/05/2018 JIRA: DAP-2065 For WIMPCT calculate GAV by multiplying positions by prices for all assets.
-- Olu: 05/07/2018 - DAP-2035 Remove T_UNQUOTED_ALLOCATION & T_UNQUOTED_REVALUATION WITH  dbo.vw_UnquotedFundingRevalution
-- Olu 01/08/2018 -  Handle the null  on TECH_STATUS
-- R. Dixon: 15/08/2018 JIRA: DAP-2170 Added exclusion for EDM_SEC_ID = 700000480 from OMNIS1 unquoted securities.
-- Olu: 12/09/2018 JIRA:  DAP-2293 Add NT Borrowing Base Unquoted EOD Calculation
-- Olu:	08/10/2018 JIRA: DAP-2071 Added exclusion for EDM_SEC_ID =  700000361, 700000306, 700000107
-------------------------------------------------------------------------------------- 
BEGIN

DECLARE	@DAYSFWD int = 30 -- business days
DECLARE	@MINPOSDATE datetime

-- Get minimum position date based on number of business days to go back in time for
SET @MINPOSDATE = 
		(
		SELECT	CALENDARDATE
		FROM	(SELECT	CALENDARDATE, ROW_NUMBER() OVER(ORDER BY CALENDARDATE DESC ) AS ROWNUM
				FROM	CORE.CALENDAR 
				WHERE	CALENDARDATE < CAST(GETDATE() AS DATE)
				AND		ISHOLIDAYUK = 0
				AND		ISWEEKDAY = 1
				) DATES
		WHERE	DATES.ROWNUM = @DAYSBCK + 1
		)

INSERT INTO @OUTPUT(POSITION_DATE, FUND_SHORT_NAME, TOTAL_UNQUOTED, FLOW, FUNDING, REVALUATION, EOD, UNQUOTED_EOD, NT_BORROWING_BASE_UEOD, CASH)
SELECT	CAST(NAV.POSITION_DATE AS DATE)													AS POSITION_DATE
		,ISNULL(NAV.FUND_SHORT_NAME, 0)													AS FUND_SHORT_NAME
		--,ISNULL(UNQ.STOCK_FUND_MKT_VALUE, 0)											AS TOTAL_UNQUOTED
		, NULL																			AS TOTAL_UNQUOTED
		,ISNULL(FUND_FLOW_SUB.MARKET_VALUE,0) - ISNULL(FUND_FLOW_RED.MARKET_VALUE, 0)	AS FLOW
		,ISNULL(FUND.FUNDING, 0)														AS FUNDING
		,ISNULL(REVAL.FUNDING, 0)														AS REVALUATION
		,CASE	WHEN NAV.FUND_SHORT_NAME = 'WIMPCT'
				THEN  ISNULL(WIM.TOTAL_FUND_MKT_VALUE, 0)
				ELSE  ISNULL(AUM.TOTAL_ACCRUED_MARKET_VALUE_BASE, 0)	
				END AS EOD
		--,(ISNULL(UNQ.STOCK_FUND_MKT_VALUE,0) + ISNULL(FUND.FUNDING, 0) + ISNULL(REVAL.FUNDING, 0)) AS UNQUOTED_EOD
		,ISNULL(UNQ.STOCK_FUND_MKT_VALUE, 0)											AS UNQUOTED_EOD
		,ISNULL(UNQ1.STOCK_FUND_MKT_VALUE, 0)											AS NT_BORROWING_BASE_UEOD
		,ISNULL(CASH.LOCAL_VALUE,0)														AS CASH
 
FROM	T_MASTER_FND_MARKET_VALUE NAV

LEFT	OUTER JOIN (SELECT	POS.FUND_SHORT_NAME, POS.POSITION_DATE, SUM(PRC.MASTER_PRICE * POS.QUANTITY / PRC.FX_RATE) AS STOCK_FUND_MKT_VALUE
					FROM	[DBO].[T_MASTER_PRC] PRC
					INNER	JOIN [DBO].[T_MASTER_POS]  POS    
					ON		POS.EDM_SEC_ID = PRC.EDM_SEC_ID
					AND		POS.POSITION_DATE = PRC.PRICE_DATE
					INNER	JOIN [DBO].[T_MASTER_SEC]  SEC    
					ON		SEC.EDM_SEC_ID = POS.EDM_SEC_ID
					WHERE	(SEC.TICKER LIKE '%.%' OR SEC.TICKER LIKE '%NWBO%')		 
					AND		PRC.PRICE_TYPE = 'EOD'
					AND		POS.EDM_SEC_ID NOT IN (SELECT EDM_SEC_ID FROM [dbo].[T_REF_SECURITY_EXCEPTIONS] 
									WHERE   EffectiveDate <= POSITION_DATE
									)
					GROUP	BY POS.FUND_SHORT_NAME, POS.POSITION_DATE
					) UNQ 
ON		UNQ.POSITION_DATE = CAST(NAV.POSITION_DATE AS DATE) AND UNQ.FUND_SHORT_NAME = NAV.FUND_SHORT_NAME


LEFT	OUTER JOIN (SELECT	POS.FUND_SHORT_NAME, POS.POSITION_DATE, SUM(PRC.MASTER_PRICE * POS.QUANTITY / PRC.FX_RATE) AS STOCK_FUND_MKT_VALUE
					FROM	[DBO].[T_MASTER_PRC] PRC
					INNER	JOIN [DBO].[T_MASTER_POS]  POS    
					ON		POS.EDM_SEC_ID = PRC.EDM_SEC_ID
					AND		POS.POSITION_DATE = PRC.PRICE_DATE
					INNER	JOIN [DBO].[T_MASTER_SEC]  SEC    
					ON		SEC.EDM_SEC_ID = POS.EDM_SEC_ID
					WHERE	(
							(SEC.TICKER LIKE '%.%' OR SEC.TICKER LIKE '%NWBO%')
							OR POS.EDM_SEC_ID IN (700000474, 700000467, 700000468, 700000469, 700000470, 700000471, 700000472, 700000473, 700000485)
							)
					AND		PRC.PRICE_TYPE = 'EOD'
					AND		(POS.FUND_SHORT_NAME   = 'WIMPCT') 
					GROUP	BY POS.FUND_SHORT_NAME, POS.POSITION_DATE
					) UNQ1
ON		UNQ1.POSITION_DATE = CAST(NAV.POSITION_DATE AS DATE) AND UNQ1.FUND_SHORT_NAME = NAV.FUND_SHORT_NAME

LEFT	OUTER JOIN (SELECT	A.FUND_SHORT_NAME, A.POSITION_DATE, 
							SUM(A.TOTAL_ACCRUED_MARKET_VALUE_BASE) TOTAL_ACCRUED_MARKET_VALUE_BASE
							FROM T_MASTER_FND_MARKET_VALUE A 
					WHERE	A.FUND_SHORT_NAME IN ('WIMEIF', 'OMNIS1', 'WIMPCT') 
					GROUP	BY A.FUND_SHORT_NAME, A.POSITION_DATE) AUM
ON		CAST(AUM.POSITION_DATE AS DATE) = CAST(NAV.POSITION_DATE AS DATE) AND AUM.FUND_SHORT_NAME = NAV.FUND_SHORT_NAME

LEFT	OUTER JOIN 
		(
		SELECT	FUND_SHORT_NAME, POSITION_DATE, SUM(TOTAL_FUND_MKT_VALUE) AS TOTAL_FUND_MKT_VALUE
		FROM	(		
				SELECT	CASE
						WHEN PRICE_ISO_CCY COLLATE Latin1_General_CS_AS <> 'GBP' AND PRICE_ISO_CCY = 'GBP' THEN   (PRC.MASTER_PRICE/100) * POS.QUANTITY / PRC.FX_RATE 
						ELSE PRC.MASTER_PRICE * POS.QUANTITY / PRC.FX_RATE 
						END AS TOTAL_FUND_MKT_VALUE, POS.FUND_SHORT_NAME, POS.POSITION_DATE
				FROM	[DBO].[T_MASTER_POS]  POS
				INNER	JOIN [DBO].[T_MASTER_PRC] PRC
				ON		PRC.EDM_SEC_ID = POS.EDM_SEC_ID
				AND		POS.POSITION_DATE = PRC.PRICE_DATE
				INNER	JOIN [DBO].[T_MASTER_SEC]  SEC
				ON		SEC.EDM_SEC_ID = POS.EDM_SEC_ID
				WHERE	PRC.PRICE_TYPE = 'EOD'
				AND		POS.FUND_SHORT_NAME   = 'WIMPCT'
				) X GROUP BY x.FUND_SHORT_NAME, X.POSITION_DATE
		) WIM
ON		WIM.FUND_SHORT_NAME = NAV.FUND_SHORT_NAME
AND		WIM.POSITION_DATE = CAST(NAV.POSITION_DATE AS DATE)

LEFT	OUTER JOIN (SELECT	 A.TRADE_DATE, A.FUND_SHORT_NAME ,SUM(AllocationAmount) FUNDING
				FROM		dbo.vw_UnquotedFundingRevaluation A 
				WHERE		isnull(TECH_STATUS,'NEW') <> 'COMPLETE' 
				AND			A.REVALUATION_ID IS NULL
				GROUP		BY A.TRADE_DATE, A.FUND_SHORT_NAME) FUND 
ON		FUND.TRADE_DATE = CAST(NAV.POSITION_DATE AS DATE) AND FUND.FUND_SHORT_NAME = NAV.FUND_SHORT_NAME



LEFT	OUTER JOIN (SELECT	 EXPECTED_ENACTMENT_DATE, A.FUND_SHORT_NAME ,SUM(AllocationAmount) FUNDING
				FROM		dbo.vw_UnquotedFundingRevaluation A
				WHERE		isnull(TECH_STATUS,'NEW') <> 'COMPLETE'
				GROUP		BY EXPECTED_ENACTMENT_DATE, A.FUND_SHORT_NAME) REVAL 
ON		REVAL.EXPECTED_ENACTMENT_DATE = CAST(NAV.POSITION_DATE AS DATE) AND REVAL.FUND_SHORT_NAME = NAV.FUND_SHORT_NAME

INNER	JOIN
		(SELECT	DT1.CALENDARDATE, DT2.CALENDARDATE AS FLOWLAGDATE
		FROM	(
				SELECT	CALENDARDATE, ROW_NUMBER() OVER(ORDER BY CALENDARDATE DESC ) AS ROWNUM
				FROM	CORE.CALENDAR 
				WHERE	ISHOLIDAYUK = 0
				AND		ISWEEKDAY = 1
				) DT1
		INNER JOIN 
				(
				SELECT	CALENDARDATE, ROW_NUMBER() OVER(ORDER BY CALENDARDATE DESC ) - @FLOWLAG AS ROWNUM
				FROM	CORE.CALENDAR 
				WHERE	ISHOLIDAYUK = 0
				AND		ISWEEKDAY = 1
				) DT2
		ON		DT1.ROWNUM = DT2.ROWNUM
		) LAG
ON		LAG.CALENDARDATE = CAST(NAV.POSITION_DATE AS DATE)
LEFT	OUTER JOIN T_MASTER_FUND_FLOW FUND_FLOW_SUB	
ON		FUND_FLOW_SUB.FUND_SHORT_NAME = NAV.FUND_SHORT_NAME  
AND		CAST(FUND_FLOW_SUB.TRANSACTION_DATE AS DATE) = LAG.FLOWLAGDATE
AND		FUND_FLOW_SUB.FLOW_TYPE = 'SUBSCRIPTION' 
AND		FUND_FLOW_SUB.SOURCE_TYPE = 'CONFIRMED' 
AND		FUND_FLOW_SUB.FUND_FLOW_TYPE = 'GROSS' 
AND		FUND_FLOW_SUB.FUND_SHORT_NAME IN ('WIMEIF','WIMPCT', 'OMNIS1')

LEFT	OUTER JOIN T_MASTER_FUND_FLOW FUND_FLOW_RED	
ON		FUND_FLOW_RED.FUND_SHORT_NAME = NAV.FUND_SHORT_NAME  
AND		CAST(FUND_FLOW_RED.TRANSACTION_DATE AS DATE) = LAG.FLOWLAGDATE
AND		FUND_FLOW_RED.FLOW_TYPE = 'REDEMPTION' 
AND		FUND_FLOW_RED.SOURCE_TYPE = 'CONFIRMED' 
AND		FUND_FLOW_RED.FUND_FLOW_TYPE = 'GROSS' 
AND		FUND_FLOW_RED.FUND_SHORT_NAME IN ('WIMEIF','WIMPCT', 'OMNIS1')
LEFT	OUTER JOIN(SELECT	C.POSITION_DATE, C.FUND_SHORT_NAME, SUM(C.LOCAL_VALUE) LOCAL_VALUE 
					FROM	T_MASTER_POS_ACCOUNT_BALANCE C 
					WHERE	C.FUND_SHORT_NAME IN ('WIMPCT','WIMEIF', 'OMNIS1') 
					GROUP	BY C.POSITION_DATE, C.FUND_SHORT_NAME) CASH 
ON		CASH.FUND_SHORT_NAME = NAV.FUND_SHORT_NAME AND CAST(CASH.POSITION_DATE AS DATE) = CAST(NAV.POSITION_DATE AS DATE)
WHERE	NAV.FUND_SHORT_NAME IN ('WIMEIF','WIMPCT', 'OMNIS1')
AND		NAV.POSITION_DATE >= @MINPOSDATE
AND		NAV.FUND_SHORT_NAME = @FUND

-- set AUM and NAV fields to AUM and NAV EOD values for previous business day
UPDATE	o
SET		o.AUM = d2.EOD,
		o.NAV = d2.EOD,
		o.TOTAL_UNQUOTED = d2.UNQUOTED_EOD
FROM	@OUTPUT o
INNER	JOIN (
		SELECT	a.POSITION_DATE, a.EOD, a.UNQUOTED_EOD, ROW_NUMBER() OVER(ORDER BY a.POSITION_DATE DESC) + 1 AS ROWNUM
		FROM	@OUTPUT a
		WHERE	a.FUND_SHORT_NAME = @FUND
		) d1
ON		d1.POSITION_DATE = o.POSITION_DATE
INNER	JOIN 
		(SELECT	b.POSITION_DATE, b.EOD, b.UNQUOTED_EOD, ROW_NUMBER() OVER(ORDER BY b.POSITION_DATE DESC) AS ROWNUM
		FROM	@OUTPUT b
		WHERE	b.FUND_SHORT_NAME = @FUND
		) d2
ON		d2.ROWNUM=d1.ROWNUM
WHERE	o.FUND_SHORT_NAME = @FUND

DELETE FROM @OUTPUT WHERE POSITION_DATE = @MINPOSDATE

RETURN

END


