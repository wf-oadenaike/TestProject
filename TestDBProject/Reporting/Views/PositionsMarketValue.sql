CREATE VIEW [Reporting].[PositionsMarketValue]
	AS 

	WITH CTE_Positions AS
(
	SELECT 
		m.[SOURCE]
		,m.[POSITION_TYPE]
		,m.[EDM_SEC_ID]
		,m.[FUND_SHORT_NAME]
		,m.[LONG_SHORT_IND]
		,m.[POSITION_DATE]
		,COALESCE(o.[QUANTITY], m.[QUANTITY]) AS [QUANTITY]
	FROM 
		[dbo].[T_MASTER_POS] m
	LEFT JOIN
		[dbo].[T_OVERRIDE_POS] o ON 
			m.[SOURCE] = o.[SOURCE] AND
			m.[POSITION_TYPE] = o.[POSITION_TYPE] AND
			m.[EDM_SEC_ID] = o.[EDM_SEC_ID] AND
			m.[FUND_SHORT_NAME] = o.[FUND_SHORT_NAME] AND
			m.[LONG_SHORT_IND] = o.[LONG_SHORT_IND] AND
			m.[POSITION_DATE] = o.[POSITION_DATE]
	WHERE
			m.[Source] = 'NT' AND 
			m.[POSITION_TYPE] = 'Position'
),
CTE_Securities AS
(
	SELECT m.[EDM_SEC_ID]
		  ,COALESCE(o.[SECURITY_NAME], m.[SECURITY_NAME]) AS [SECURITY_NAME]
		  ,COALESCE(o.[SECURITY_DESCRIPTION], m.[SECURITY_DESCRIPTION]) AS [SECURITY_DESCRIPTION]
		  ,COALESCE(o.[SECURITY_SHORTNAME], m.[SECURITY_SHORTNAME]) AS [SECURITY_SHORTNAME]
		  ,COALESCE(o.[ASSET_TYPE], m.[ASSET_TYPE]) AS [ASSET_TYPE]
		  ,COALESCE(o.[SECURITY_TYPE], m.[SECURITY_TYPE]) AS [SECURITY_TYPE]
		  ,COALESCE(o.[CUSIP], m.[CUSIP]) AS [CUSIP]
		  ,COALESCE(o.[ISIN], m.[ISIN]) AS [ISIN]
		  ,COALESCE(o.[SEDOL], m.[SEDOL]) AS [SEDOL]
		  ,COALESCE(o.[TICKER], m.[TICKER]) AS [TICKER]
		  ,COALESCE(o.[VALOREN], m.[VALOREN]) AS [VALOREN]
		  ,COALESCE(o.[WERTPAPIER], m.[WERTPAPIER]) AS [WERTPAPIER]
		  ,COALESCE(o.[SECURITY_ISO_CCY], m.[SECURITY_ISO_CCY]) AS [SECURITY_ISO_CCY]
		  ,COALESCE(o.[RISK_ISO_CCY], m.[RISK_ISO_CCY]) AS [RISK_ISO_CCY]
		  ,COALESCE(o.[FIXED_ISO_CCY], m.[FIXED_ISO_CCY]) AS [FIXED_ISO_CCY]
		  ,COALESCE(o.[INCORPORATION_ISO_CTY], m.[INCORPORATION_ISO_CTY]) AS [INCORPORATION_ISO_CTY]
		  ,COALESCE(o.[DOMICILE_ISO_CTY], m.[DOMICILE_ISO_CTY]) AS [DOMICILE_ISO_CTY]
		  ,COALESCE(o.[ISSUE_COUNTRY_ISO], m.[ISSUE_COUNTRY_ISO]) AS [ISSUE_COUNTRY_ISO]
		  ,COALESCE(o.[RISK_ISO_CTY], m.[RISK_ISO_CTY]) AS [RISK_ISO_CTY]
		  ,COALESCE(o.[MIC_EXCHANGE_CODE], m.[MIC_EXCHANGE_CODE]) AS [MIC_EXCHANGE_CODE]
		  ,COALESCE(o.[STATE_CODE], m.[STATE_CODE]) AS [STATE_CODE]
		  ,COALESCE(o.[ACTIVE_TRADE_INDICATOR], m.[ACTIVE_TRADE_INDICATOR]) AS [ACTIVE_TRADE_INDICATOR]
		  ,COALESCE(o.[144A_INDICATOR], m.[144A_INDICATOR]) AS [144A_INDICATOR]
		  ,COALESCE(o.[PRIVATE_PLACEMENT_INDICATOR], m.[PRIVATE_PLACEMENT_INDICATOR]) AS [PRIVATE_PLACEMENT_INDICATOR]
		  ,COALESCE(o.[ILLIQUID], m.[ILLIQUID]) AS [ILLIQUID]
		  ,COALESCE(o.[QUOTE_TYPE], m.[QUOTE_TYPE]) AS [QUOTE_TYPE]
		  ,COALESCE(o.[DAYS_TO_SETTLE], m.[DAYS_TO_SETTLE]) AS [DAYS_TO_SETTLE]
		  ,COALESCE(o.[TRADE_SETTLEMENT_CALENDAR_CODE], m.[TRADE_SETTLEMENT_CALENDAR_CODE]) AS [TRADE_SETTLEMENT_CALENDAR_CODE]
		  ,COALESCE(o.[UNIQUE_BLOOMBERG_ID], m.[UNIQUE_BLOOMBERG_ID]) AS [UNIQUE_BLOOMBERG_ID]
		  ,COALESCE(o.[BBG_EXCHANGE_CODE], m.[BBG_EXCHANGE_CODE]) AS [BBG_EXCHANGE_CODE]
		  ,COALESCE(o.[BBG_SECTOR], m.[BBG_SECTOR]) AS [BBG_SECTOR]
		  ,COALESCE(o.[BBG_SUBSECTOR], m.[BBG_SUBSECTOR]) AS [BBG_SUBSECTOR]
		  ,COALESCE(o.[BBG_GROUP], m.[BBG_GROUP]) AS [BBG_GROUP]
		  ,COALESCE(o.[IS_IPO], m.[IS_IPO]) AS [IS_IPO]
		  ,COALESCE(o.[PARSEKEYABLE_DESCRIPTION], m.[PARSEKEYABLE_DESCRIPTION]) AS [PARSEKEYABLE_DESCRIPTION]
	  FROM 
		[dbo].[T_MASTER_SEC] m
	  LEFT JOIN 
		[dbo].[T_OVERRIDE_SEC] o ON 
			m.[EDM_SEC_ID] = o.[EDM_SEC_ID]
),
CTE_PRICE AS 
(
SELECT 
		m.[EDM_SEC_ID]
      ,m.[PRICE_TYPE]
      ,COALESCE(o.[PRICE_SOURCE], m.[PRICE_SOURCE]) AS [PRICE_SOURCE]
      ,m.[PRICE_DATE]
      ,COALESCE(o.[PRICE_TIME], m.[PRICE_TIME]) AS [PRICE_TIME]
      ,COALESCE(o.[AVERAGE_COST], m.[AVERAGE_COST]) AS [AVERAGE_COST]
      ,COALESCE(o.[PRICE_SOURCE_RANKING], m.[PRICE_SOURCE_RANKING]) AS [PRICE_SOURCE_RANKING]
      ,COALESCE(o.[PRICE_ISO_CCY], m.[PRICE_ISO_CCY]) AS [PRICE_ISO_CCY]
      ,COALESCE(o.[MASTER_PRICE], m.[MASTER_PRICE]) AS [MASTER_PRICE]
      ,COALESCE(o.[ASK_PRICE], m.[ASK_PRICE]) AS [ASK_PRICE]
      ,COALESCE(o.[MID_PRICE], m.[MID_PRICE]) AS [MID_PRICE]
      ,COALESCE(o.[BID_PRICE], m.[BID_PRICE]) AS [BID_PRICE]
  FROM 
	[dbo].[T_MASTER_PRC] m
 LEFT JOIN 
	[dbo].[T_OVERRIDE_PRC] o ON 
		m.[EDM_SEC_ID] = o.[EDM_SEC_ID] AND
		m.[PRICE_TYPE] = o.[PRICE_TYPE] AND
		m.[PRICE_DATE] = o.[PRICE_DATE]
),
CTE_FUND_AUM AS
(
	SELECT 
		  m.[SOURCE]
		  ,m.[POSITION_TYPE]
		  ,m.[FUND_SHORT_NAME]
		  ,m.[POSITION_DATE]
		  ,COALESCE(o.[TOTAL_MARKET_VALUE_LOCAL], m.[TOTAL_MARKET_VALUE_LOCAL]) AS [TOTAL_MARKET_VALUE_LOCAL]
		  ,COALESCE(o.[TOTAL_MARKET_VALUE_BASE], m.[TOTAL_MARKET_VALUE_BASE]) AS [TOTAL_MARKET_VALUE_BASE]
		  ,COALESCE(o.[STATUS], m.[STATUS]) AS [STATUS]
	  FROM 
		[dbo].[T_MASTER_FND_MARKET_VALUE] m
	  LEFT JOIN
		[dbo].[T_OVERRIDE_FND_MARKET_VALUE] o ON
			m.[SOURCE] = o.[SOURCE] AND
			m.[POSITION_TYPE] = o.[POSITION_TYPE] AND
			m.[FUND_SHORT_NAME] = o.[FUND_SHORT_NAME] AND
			m.[POSITION_DATE] = o.[POSITION_DATE]
	 WHERE
		m.[Source] = 'NT' AND
		m.[POSITION_TYPE] = 'Position'
),
CTE_FX AS (
	SELECT 
		   m.[FXRATE_ID]
		  ,m.[DATE]
		  ,COALESCE(o.[FROM_ISO_CURRENCY_CODE], m.[FROM_ISO_CURRENCY_CODE]) AS [FROM_ISO_CURRENCY_CODE]
		  ,COALESCE(o.[TO_ISO_CURRENCY_CODE], m.[TO_ISO_CURRENCY_CODE]) AS [TO_ISO_CURRENCY_CODE]
		  ,COALESCE(o.[SPOT_RATE], m.[SPOT_RATE]) AS [SPOT_RATE]
		  ,COALESCE(o.[1_MONTH_FORWARD_RATE], m.[1_MONTH_FORWARD_RATE]) AS [1_MONTH_FORWARD_RATE]
		  ,COALESCE(o.[2_MONTH_FORWARD_RATE], m.[2_MONTH_FORWARD_RATE]) AS [2_MONTH_FORWARD_RATE]
		  ,COALESCE(o.[3_MONTH_FORWARD_RATE], m.[3_MONTH_FORWARD_RATE]) AS [3_MONTH_FORWARD_RATE]
		  ,COALESCE(o.[6_MONTH_FORWARD_RATE], m.[6_MONTH_FORWARD_RATE]) AS [6_MONTH_FORWARD_RATE]
		  ,COALESCE(o.[1_YEAR_FORWARD_RATE], m.[1_YEAR_FORWARD_RATE]) AS [1_YEAR_FORWARD_RATE]
		  ,COALESCE(o.[DATA_QUALITY], m.[DATA_QUALITY]) AS [DATA_QUALITY]
	  FROM 
		[dbo].[T_MASTER_FXRATE] m
	  LEFT JOIN
		[dbo].[T_OVERRIDE_FXRATE] o ON
			m.[FXRATE_ID] = o.[FXRATE_ID] AND
			m.[DATE] = o.[DATE]
)
SELECT 
	  pos.[POSITION_DATE]
      ,pos.[FUND_SHORT_NAME]
	  ,sec.[SECURITY_NAME]
	  ,sec.[TICKER]
	  ,sec.[SECURITY_ISO_CCY]
      ,pos.[LONG_SHORT_IND]
      ,pos.[QUANTITY]
	  ,(CASE WHEN LEFT(sec.[TICKER],1) = '.' THEN 1 ELSE 0 END) AS [IsUnquoted]
	  ,sec.[ISSUE_COUNTRY_ISO]
	  ,sec.[UNIQUE_BLOOMBERG_ID]
	  ,eodPrice.[MASTER_PRICE] AS EODPrice
	  ,midPrice.[MASTER_PRICE] AS MidPrice
	  ,prevEodPrice.[MASTER_PRICE] AS PreviousEODPrice
	  ,prevMidPrice.[MASTER_PRICE] AS PreviousMidPrice
	  ,COALESCE(sec.[SECURITY_ISO_CCY] ,EODPrice.[PRICE_ISO_CCY], MidPrice.[PRICE_ISO_CCY]) AS PriceCCY
	  ,(CASE WHEN UPPER(
		COALESCE(sec.[SECURITY_ISO_CCY] ,EODPrice.[PRICE_ISO_CCY], MidPrice.[PRICE_ISO_CCY]) --PriceCCY
		) COLLATE Latin1_General_CS_AS = 
		COALESCE(sec.[SECURITY_ISO_CCY] ,EODPrice.[PRICE_ISO_CCY], MidPrice.[PRICE_ISO_CCY]) --PriceCCY
		 COLLATE Latin1_General_CS_AS THEN 1.0 ELSE 0.01 END) AS Multiplier
		, aum.[TOTAL_MARKET_VALUE_LOCAL] AS [FUND_MARKET_VALUE_LOCAL]
		, aum.[TOTAL_MARKET_VALUE_BASE] AS [FUND_MARKET_VALUE_BASE]
		, fund.[BASE_CURRENCY] AS [FUND_BASE_CURRENCY]
		, fund.[VALUATION_PERIOD] AS [FUND_VALUATION_PERIOD]
		, (CASE WHEN 
			COALESCE(sec.[SECURITY_ISO_CCY] ,EODPrice.[PRICE_ISO_CCY], MidPrice.[PRICE_ISO_CCY]) --PriceCCY
			= fund.[BASE_CURRENCY] THEN 1 ELSE fx.[SPOT_RATE] END
		) AS FX
		, (CASE WHEN 
			COALESCE(sec.[SECURITY_ISO_CCY] ,EODPrice.[PRICE_ISO_CCY], MidPrice.[PRICE_ISO_CCY]) --PriceCCY
			= fund.[BASE_CURRENCY] THEN 1 ELSE prevFx.[SPOT_RATE] END
		) AS PreviousFX
		,(pos.[QUANTITY] * 
			(CASE WHEN UPPER(
			COALESCE(sec.[SECURITY_ISO_CCY] ,EODPrice.[PRICE_ISO_CCY], MidPrice.[PRICE_ISO_CCY]) --PriceCCY
			) COLLATE Latin1_General_CS_AS = 
			COALESCE(sec.[SECURITY_ISO_CCY] ,EODPrice.[PRICE_ISO_CCY], MidPrice.[PRICE_ISO_CCY]) --PriceCCY
				COLLATE Latin1_General_CS_AS THEN 1.0 ELSE 0.01 END) -- Multiplier
		* 
		(CASE 
			WHEN fund.[VALUATION_PERIOD] = 'EOD' THEN eodPrice.[MASTER_PRICE] *
				(CASE WHEN 
			COALESCE(sec.[SECURITY_ISO_CCY] ,EODPrice.[PRICE_ISO_CCY], MidPrice.[PRICE_ISO_CCY]) --PriceCCY
			= fund.[BASE_CURRENCY] THEN 1 ELSE fx.[SPOT_RATE] END
				) -- fx
			WHEN fund.[VALUATION_PERIOD] = 'Midday' THEN midPrice.[MASTER_PRICE] * 
				(CASE WHEN 
				COALESCE(sec.[SECURITY_ISO_CCY] ,EODPrice.[PRICE_ISO_CCY], MidPrice.[PRICE_ISO_CCY]) --PriceCCY
				= fund.[BASE_CURRENCY] THEN 1 ELSE prevFx.[SPOT_RATE] END
			) --PrevFx
		 END)
		) AS MARKET_VALUE_BASE
  FROM 
	CTE_Positions pos
  LEFT JOIN 
	CTE_Securities sec ON 
		pos.[EDM_SEC_ID] = sec.[EDM_SEC_ID]
  LEFT JOIN 
	CTE_PRICE EodPrice ON 
		EodPrice.[EDM_SEC_ID] = sec.[EDM_SEC_ID] AND 
		pos.[POSITION_DATE] = EODPrice.[PRICE_DATE] AND 
		eodPrice.[PRICE_TYPE] = 'EOD'
  LEFT JOIN 
	CTE_PRICE midPrice ON 
		midPrice.[EDM_SEC_ID] = sec.[EDM_SEC_ID] AND 
		(CASE WHEN DATENAME(DW, pos.[POSITION_DATE]) = 'FRIDAY' THEN DATEADD(dd, 3, pos.[POSITION_DATE]) ELSE DATEADD(dd, 1, pos.[POSITION_DATE]) END) = midPrice.[PRICE_DATE] AND 
		midPrice.[PRICE_TYPE] = 'Midday Mid'
  LEFT JOIN 
	CTE_PRICE PrevEodPrice ON 
		PrevEodPrice.[EDM_SEC_ID] = sec.[EDM_SEC_ID] AND 
		(CASE WHEN DATENAME(DW, pos.[POSITION_DATE]) = 'MONDAY' THEN DATEADD(dd, -3, pos.[POSITION_DATE]) ELSE DATEADD(dd, -1, pos.[POSITION_DATE]) END) = PrevEodPrice.[PRICE_DATE] AND 
		PrevEodPrice.[PRICE_TYPE] = 'EOD'
  LEFT JOIN 
	CTE_PRICE PrevMidPrice ON 
		PrevMidPrice.[EDM_SEC_ID] = sec.[EDM_SEC_ID] AND 
		(CASE WHEN DATENAME(DW, pos.[POSITION_DATE]) = 'FRIDAY' THEN DATEADD(dd, 3, pos.[POSITION_DATE]) ELSE DATEADD(dd, 1, pos.[POSITION_DATE]) END) = PrevMidPrice.[PRICE_DATE] AND 
		PrevMidPrice.[PRICE_TYPE] = 'Midday Mid'
  LEFT JOIN
	CTE_FUND_AUM aum ON
		aum.[POSITION_DATE] = pos.[POSITION_DATE] AND
		LTRIM(RTRIM(aum.[FUND_SHORT_NAME])) = LTRIM(RTRIM(pos.[FUND_SHORT_NAME]))
  LEFT JOIN
	[dbo].[T_MASTER_FND] fund ON
		LTRIM(RTRIM(pos.[FUND_SHORT_NAME])) = LTRIM(RTRIM(fund.[SHORT_NAME]))
  LEFT JOIN 
	CTE_FX fx ON 
		fx.[FXRATE_ID] = ISNULL(
			COALESCE(sec.[SECURITY_ISO_CCY] ,EODPrice.[PRICE_ISO_CCY], MidPrice.[PRICE_ISO_CCY]) --PriceCCY 
			,'') + ISNULL(fund.[BASE_CURRENCY],'') AND 
		fx.[DATE] = pos.[POSITION_DATE]
  LEFT JOIN 
	CTE_FX prevFx ON 
		prevFx.[FXRATE_ID] = ISNULL(
			COALESCE(sec.[SECURITY_ISO_CCY] ,EODPrice.[PRICE_ISO_CCY], MidPrice.[PRICE_ISO_CCY]) --PriceCCY 
			,'') + ISNULL(fund.[BASE_CURRENCY],'') AND 
		prevFx.[DATE] = (CASE WHEN DATENAME(DW, pos.[POSITION_DATE]) = 'MONDAY' THEN DATEADD(dd, -3, pos.[POSITION_DATE]) ELSE DATEADD(dd, -1, pos.[POSITION_DATE]) END)
